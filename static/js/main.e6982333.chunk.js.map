{"version":3,"sources":["components/Audio.js","components/Overlay.js","components/Background.js","components/Arrow.js","App.js","serviceWorker.js","index.js","components/song.mp3"],"names":["Music","props","play","setState","pause","audio","state","url","Audio","console","log","style","paddingLeft","className","onClick","this","React","Component","Overlay","text","Background","data","backgroundImage","Arrow","listItems","SlideData","map","id","keys","width","height","App","Song","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"mNAqCeA,G,wDAlCX,WAAYC,GAAQ,IAAD,8BACnB,cAAMA,IAaRC,KAAO,WACP,EAAKC,SAAS,CAAED,MAAM,EAAME,OAAO,IACjC,EAAKC,MAAMH,QAhBQ,EAmBrBE,MAAQ,WACR,EAAKD,SAAS,CAAED,MAAM,EAAOE,OAAO,IAClC,EAAKC,MAAMD,SAnBX,EAAKE,MAAQ,CACXJ,MAAM,EACNE,OAAO,EACPG,IAAM,EAAKN,MAAMI,OAGnB,EAAKA,MAAQ,IAAIG,MAAM,EAAKF,MAAMC,KAClC,EAAKF,MAAMH,OAEXO,QAAQC,IAAI,MAAM,EAAKT,OAXJ,E,qDA0BrB,OACE,yBAAKU,MAAO,CAACC,YAAY,UACvB,yBAAKC,UAAU,SAASC,QAASC,KAAKb,MAAtC,QACA,yBAAKW,UAAU,SAASC,QAASC,KAAKX,OAAtC,c,GA9BcY,IAAMC,YCEX,SAASC,EAAQjB,GACPA,EAAdkB,KAD6B,IACxBd,EAASJ,EAATI,MACZ,OACI,yBAAKQ,UAAU,WACX,yBAAKA,UAAU,YACb,uBAAGA,UAAU,QAAQZ,EAAMkB,OAE7B,kBAAC,EAAD,CAAOd,MAAOA,KCPX,SAASe,EAAWnB,GAAQ,IAChCoB,EAAQpB,EAARoB,KACP,OACI,yBAAKR,UAAU,KAAKF,MAAO,CAACW,gBAAgB,OAAD,OAAQD,EAAKd,IAAb,OACvC,kBAACW,EAAD,CAASC,KAAME,EAAKF,KAAMd,MAAOgB,EAAKhB,SCJnC,SAASkB,EAAMtB,GAAQ,IAE9BuB,EADcvB,EAAbwB,UACqBC,KAAI,SAACL,EAAKM,GAAN,OAChC,kBAACP,EAAD,CAAaQ,KAAMD,EAAIN,KAAMA,OAE3B,OACI,yBAAKV,MAAO,CAACkB,MAAM,OAAQC,OAAO,UAC9B,kBAAC,IAAD,KACGN,I,qBCRMO,E,4MACnBzB,MAAQ,CACNe,KAAK,CAAC,CACJd,IAAI,iKACJY,KAAK,UACLd,MAAM2B,KAEP,CACCzB,IAAI,iKACJY,KAAK,UACLd,MAAM,IAEP,CACCE,IAAI,iKACJY,KAAK,UACLd,MAAM2B,KAEP,CACCzB,IAAI,iKACJY,KAAK,UACLd,MAAM,IAEP,CACCE,IAAI,iKACJY,KAAK,UACLd,MAAM2B,O,uDAMR,OACE,yBAAKrB,MAAO,CAACkB,MAAM,OAAQC,OAAO,UAChC,kBAACP,EAAD,CAAOE,UAAWV,KAAKT,MAAMe,Y,GAjCJJ,aCQbgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzC,QAAQyC,MAAMA,EAAMC,a,mBEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.e6982333.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Music extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      play: false,\r\n      pause: true,\r\n      url : this.props.audio\r\n    }\r\n  \r\n    this.audio = new Audio(this.state.url);\r\n    this.audio.play();\r\n    \r\n    console.log(\"ddd\",this.props);\r\n  }\r\n\r\n  play = () => {\r\n  this.setState({ play: true, pause: false })\r\n    this.audio.play();\r\n  }\r\n  \r\n  pause = () => {\r\n  this.setState({ play: false, pause: true })\r\n    this.audio.pause();\r\n  }\r\n  \r\n  render() {\r\n    \r\n  return (\r\n    <div style={{paddingLeft:'100px'}}>\r\n      <div className=\"button\" onClick={this.play} >Play</div>\r\n      <div className=\"button\" onClick={this.pause}>Pause</div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default Music;","import React from 'react';\r\nimport './style.css';\r\nimport Music from './Audio';\r\n\r\nexport default function Overlay(props) {\r\n    const {text,audio} = props;\r\n    return (\r\n        <div className='overlay'>  \r\n            <div className='textArea'>\r\n              <p className='text'>{props.text}</p>\r\n            </div>            \r\n            <Music audio={audio}/>      \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\nimport Overlay from './Overlay';\r\n\r\nexport default function Background(props) {\r\n    const {data} = props;\r\n    return (\r\n        <div className='bg' style={{backgroundImage:`url(${data.url})`}}>                       \r\n            <Overlay text={data.text} audio={data.audio}/>  \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Slider from 'infinite-react-carousel';\r\nimport Background from './Background';\r\n\r\nexport default function Arrow(props) {\r\n  const {SlideData} = props;\r\n  const listItems = SlideData.map((data,id) =>\r\n  <Background  keys={id} data={data}/>\r\n  );\r\n    return (\r\n        <div style={{width:'100%', height:'100px'}}>      \r\n            <Slider>      \r\n              {listItems}\r\n            </Slider>   \r\n            </div>         \r\n    )\r\n}\r\n","import React, { Component } from 'react';\nimport Arrow from './components/Arrow';\nimport Song from './components/song.mp3';\n\nexport default class App extends Component {\n  state = {\n    data:[{\n      url:'https://images.unsplash.com/photo-1588392382834-a891154bca4d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1055&q=80',\n      text:'Slide 1',\n      audio:Song\n     },\n     {\n      url:'https://images.unsplash.com/photo-1441974231531-c6227db76b6e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1051&q=80',\n      text:'Slide 2',\n      audio:''\n     },\n     {\n      url:'https://images.unsplash.com/photo-1470071459604-3b5ec3a7fe05?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1140&q=80',\n      text:'Slide 3',\n      audio:Song\n     },\n     {\n      url:'https://images.unsplash.com/photo-1418065460487-3e41a6c84dc5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1050&q=80',\n      text:'Slide 4',\n      audio:''\n     },\n     {\n      url:'https://images.unsplash.com/photo-1497436072909-60f360e1d4b1?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1189&q=80',\n      text:'Slide 5',\n      audio:Song\n     }\n    ]\n  };\n\n  render() {\n    return (\n      <div style={{width:'100%', height:'100vh' }}>\n        <Arrow SlideData={this.state.data}/>   \n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/song.68bfe60c.mp3\";"],"sourceRoot":""}